<div id="tmp" class="container-fluid" style="margin-top: 40px;
 display: flex; flex-direction: column;
 align-items: center;">
  <div style="font-size: 20px; text-align: center; margin: 10px;">
    ~ Cerca piatti per ingrediente ~
  </div>


  <!-- <div class="d-flex" style="width: 50vw;">
    <input id = "searchBarOrigin" class="form-control me-2"  type="search" placeholder="Specifica un ingrediente ..." aria-label="Search">
    <button class="btn btn-outline-success" style = "background-color: #21BF73; color: white" id="enterOrigin">Search</button>
  </div> -->

  <div autocomplete="off">
    <div class="autocomplete" style="width:300px;">
      <input id="searchBar" type="text" name="myCountry" placeholder="Specifica un ingrediente">
    </div>
    <button class="btn btn-outline-success" style = "background-color: #21BF73; color: white" id="enter">Search</button>
  </div>

  <!-- bisognerebbe inserire gli item dinamicamente con appendChild -->
  <script type="text/javascript">
      $('#enter').click(function(){
       $.ajax({
             url: '/findRecipeByIngredient',
             type: 'POST',
             cache: false,
             dataType: 'json',
             data: { ingredient:  $("#searchBar").val()},
             success: function (result) {
                  console.log(result.ricette);
                  if(result.ricette.length > 0)
                  {
                     $('#containerdishInListItem').removeAttr('hidden');
                     $('#PaesePiuAbuso').removeAttr('hidden');
                     $('#resultQuery3').removeAttr('hidden');
                     let tmp = document.createElement('div')
                     tmp.id = "pagination"
                     console.log(tmp, document.getElementById("tmp"));
                     document.getElementById("tmp").appendChild(tmp)
                     //$('#pagination').removeAttr('hidden');
                     //$('#pagination').pagination('selectPage', 1);
                     $('#pagination').pagination({
                                                  // Total number of items present
                                                  // in wrapper class

                                                  items : result.ricette.length,
                                                  itemsOnPage: 8,
                                                  displayedPages : 10,
                                                  edges : 1,
                                                  // Items allowed on a single page

                                                  cssStyle: 'compact-theme',
                                                  onPageClick: function (pageNuber) {
                                                                                      var k = (parseInt(pageNuber) - 1 ) * 8;
                                                                                      console.log("click su " , pageNuber)
                                                                                      $.ajax({
                                                                                              url: '/findRecipeByIngredient',
                                                                                              type: 'POST',
                                                                                              cache: false,
                                                                                              dataType: 'json',
                                                                                              data: { ingredient: $("#searchBar").val() , from: k, to: 8 },
                                                                                              success: function (result) {
                                                                                                                            console.log(result);
                                                                                                                            var tmp = $("#pageCorr").val();
                                                                                                                            var elements = document.getElementsByClassName("TitleRecipe");
                                                                                                                            var elementsD = document.getElementsByClassName("RecipeContent");
                                                                                                                            var item = document.getElementsByClassName("piattoinListItem");
                                                                                                                            var elementsImage = document.getElementsByClassName("imgInItem3");
                                                                                                                            let i = 0;
                                                                                                                            let z = 0;
                                                                                                                            for( i = 0; i < result.ricette.length; i = i+1 , k+=1 )
                                                                                                                            {
                                                                                                                              const settings = {
                                                                                                                                 "async": true,
                                                                                                                                 "crossDomain": true,
                                                                                                                                 "url": "https://bing-image-search1.p.rapidapi.com/images/search?q="+result.ricette[i].name,
                                                                                                                                 "method": "GET",
                                                                                                                                 "headers": {
                                                                                                                                   "x-rapidapi-key": "", // INSERIRE UNA KEY VALIDA
                                                                                                                                   "x-rapidapi-host": "bing-image-search1.p.rapidapi.com"
                                                                                                                                 }
                                                                                                                             };

                                                                                                                            setTimeout(function () {
                                                                                                                              $.ajax(settings).done(function (response) {
                                                                                                                                console.log("get immagine ...");
                                                                                                                                console.log(response.value[0].contentUrl);
                                                                                                                               elementsImage[z].src = response.value[0].contentUrl;
                                                                                                                               z = z+1;
                                                                                                                              });
                                                                                                                            }, 1000*z);

                                                                                                                              //console.log(elements[i]);
                                                                                                                              elements[i].innerHTML = result.ricette[i].name;
                                                                                                                              item[i].style.display = 'flex'
																									                                                                           elementsD[i].innerHTML = "";
                                                                                                                              for(let j = 0; j < result.ricette[i].ingredients.length; j = j+ 1)
                                                                                                                                  elementsD[i].innerHTML  = elementsD[i].innerHTML +
																																  " Â· " + result.ricette[i].ingredients[j].alias_ingredient;

                                                                                                                            }
                                                                                                                            while(i < item.length)
                                                                                                                            {

                                                                                                                              item[i].style.display = 'none';
                                                                                                                              i+= 1;
                                                                                                                            }

                                                                                                                          } , error : function(result){ console.log("errore " , result)}
                                                                                          })
                                                  }
                                                  , onInit : function (pageNuber){ console.log("ho caricato la paginazione : " , pageNuber) }
                                                  });

                     document.getElementById("resultQuery3").innerHTML =  "Trovate " + result.ricette.length + " ricette con "+$("#searchBar").val();
                  }
                  else{
                    $('#containerdishInListItem').prop("hidden", true);
                    $('#PaesePiuAbuso').prop("hidden", true);
                    document.getElementById("resultQuery3").innerHTML = " Non ho trovato nessuna ricetta ";
                  }
                  var elementsTitles = document.getElementsByClassName("TitleRecipe");
                  var elementsDescriptions = document.getElementsByClassName("RecipeContent");
                  var elementsImage = document.getElementsByClassName("imgInItem3");
                  var item = document.getElementsByClassName("piattoinListItem");

                  for(let i = 0; i < result.ricette.length; i = i+ 1)
                  {
                    if(elementsTitles[i])
                    {
                      elementsTitles[i].innerHTML = result.ricette[i].name;
                          //API per immagini ricetta
                           const settings = {
                              "async": true,
                              "crossDomain": true,
                              "url": "https://bing-image-search1.p.rapidapi.com/images/search?q="+result.ricette[i].name,
                              "method": "GET",
                              "headers": {
                                "x-rapidapi-key": "", // INSERIRE UNA KEY VALIDA
                                "x-rapidapi-host": "bing-image-search1.p.rapidapi.com"
                              }
                          };

                         setTimeout(function () {
                           $.ajax(settings).done(function (response) {
                             console.log("get immagine ...");
                             console.log(response.value[0].contentUrl);
                            elementsImage[i].src = response.value[0].contentUrl;
                           });
                         }, 1000*i);
                    }

                    elementsDescriptions[i].innerHTML = "";
                    for(let j = 0; j < result.ricette[i].ingredients.length; j = j+ 1)
                        elementsDescriptions[i].innerHTML  = elementsDescriptions[i].innerHTML +
						" Â· " + result.ricette[i].ingredients[j].alias_ingredient;
                  }
                  while(i < item.length)
                  {
                    item[i].style.display = 'none';
                    i+= 1;
                  }
              }
             , error: function(result){
                  console.log(result);
              }
          })
       });
  </script>


  <div style="font-size: 20px; text-align: center; margin: 10px;" id= "resultQuery3" hidden >
    Risultati trovati: --
  </div>


  <div class = "container" style= "display: flex; flex-wrap: wrap; flex-direction: row;
  justify-content: space-between; align-items: center;">

    <div style="width: 700px;" id = "containerdishInListItem" hidden>
      <%- include('items/dishInListItem');-%>
      <%- include('items/dishInListItem');-%>
      <%- include('items/dishInListItem');-%>
      <%- include('items/dishInListItem');-%>
      <%- include('items/dishInListItem');-%>
      <%- include('items/dishInListItem');-%>
      <%- include('items/dishInListItem');-%>
      <%- include('items/dishInListItem');-%>

    </div>




    <script type="text/javascript">

        $('#enter').click(function(){

          flagDictionary = {
                            Italy: "IT",
                            Greece: "GR" ,
                            France: "FR",
                            "Misc.: Dutch": "AN" ,
                            "South America": "NULL",
                            Spain: "ES" ,
                            "Eastern Europe": "EU" ,
                            "Misc.: Central America": "NULL" ,
                            Africa: "NULL" ,
                            "Australia & NZ": "AU" ,
                            Canada: "CA" ,
                            USA: "US" ,
                            China: "CN" ,
                            "Misc.: Portugal": "PT" ,
                            "South East Asi": "NULL" ,
                            Thailand: "TH" ,
                            "British Isles": "GB" ,
                            Scandinavia: "NULL" ,
                            "Indian Subcontinent": "IN" ,
                            "Middle East": "NULL" ,
                            Japan: "JP" ,
                            Korea : "KP" ,
                            Caribbean: "NULL",
                            Mexico: "MX" ,
                            "Misc.: Belgian": "BE",
                            "DACH Countries": "NULL",
                        };

         $.ajax({
               url: '/findTopCuisineByIngredient',
               type: 'POST',
               cache: false,
               dataType: 'json',
               data: { ingredient:  $("#searchBar").val()},
               success: function (result) {
                    if(result.status == 200){
                       console.log("OK");
                    }
                    console.log(result.classifica);

                    // --- CALCOLO PODIO ---
                    var scores = Object.values(result.classifica);
                    function sortInt(a,b) { return a - b; }
                    scores.sort(sortInt);
                    scores = scores.reverse();
                    //console.log(scores);
                    function getKeyByValue(object, value) {
                      return Object.keys(object).find(key => object[key] === value);
                    }
                    var podio = [];
                    podio[0] = getKeyByValue(result.classifica, scores[0]);
                    podio[1] = getKeyByValue(result.classifica, scores[1]);
                    podio[2] = getKeyByValue(result.classifica, scores[2]);

                    //console.log(result.ricette[0]._id, result.ricette[2]._id,  result.ricette[3]._id);
                    document.getElementById("TopNationIngredient").innerHTML = podio[0];
                    document.getElementById("TopNationIngredientDescr").innerHTML = "Ã il paese che utilizza maggiormente \""+$("#searchBar").val() +"\" nella sua cucina."

                    var itemNation = document.getElementsByClassName("itemNation");
                    var flag = document.getElementById("nationFlag");

                  //  console.log(itemNation.length);
                    for(let i = 0; i < 3; i = i + 1){
                        itemNation[i].innerHTML = i+1 +". "+ podio[i] || "";
                    }

                    if(flagDictionary[podio[0]] != "NULL")
                      flag.src = "https://www.countryflags.io/"+flagDictionary[podio[0]]+"/flat/64.png"
                    else flag.src = "https://www.flagsonline.it/uploads/2016-6-6/1200-0/bianca.jpg"

                }
               , error: function(result){
                    console.log(result);
                }
            })
         });
    </script>
    <div class="card" id = "PaesePiuAbuso" style="width: 18rem; text-align: center; border-radius: 30px; padding: 20px; margin: 20px;" hidden>
      <img src="" class="card-img-top" id= "nationFlag" alt="...">
      <div class="card-body">
        <h5 class="card-title"><b id= "TopNationIngredient"> - - - </b></h5>
        <p class="card-text" style = "font-weight: normal;"  id= "TopNationIngredientDescr">Ã il paese che utilizza maggiormente -- nella sua cucina.</p>
      </div>
      <ul class="list-group list-group-flush" style = "font-weight: normal;">
        <li class="list-group-item" style = "font-weight: bold;"><i class= "itemNation"> - - - </i></li>
        <li class="list-group-item"><i class= "itemNation"> - - - </i></li>
        <li class="list-group-item"> <i class= "itemNation"> - - - </i></li>
      </ul>
    </div>
  </div>



  <!-- cambio pagina -->

<!-- <div id="pagination"></div> -->

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/simplePagination.js/1.6/jquery.simplePagination.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/simplePagination.js/1.6/simplePagination.min.css">
<script>
    //$(".wrapper .item").slice(4).hide();
</script>






<script>

  function autocomplete(inp, arr) {
    /*the autocomplete function takes two arguments,
    the text field element and an array of possible autocompleted values:*/
    var currentFocus;
    /*execute a function when someone writes in the text field:*/
    inp.addEventListener("input", function(e) {
        var a, b, i, val = this.value;
        /*close any already open lists of autocompleted values*/
        closeAllLists();
        if (!val) { return false;}
        currentFocus = -1;
        /*create a DIV element that will contain the items (values):*/
        a = document.createElement("DIV");
        a.setAttribute("id", this.id + "autocomplete-list");
        a.setAttribute("class", "autocomplete-items");
        /*append the DIV element as a child of the autocomplete container:*/
        this.parentNode.appendChild(a);
        /*for each item in the array...*/
        for (i = 0; i < arr.length; i++) {
          /*check if the item starts with the same letters as the text field value:*/
          if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
            /*create a DIV element for each matching element:*/
            b = document.createElement("DIV");
            /*make the matching letters bold:*/
            b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
            b.innerHTML += "<span style='color:grey' >" + arr[i].substr(val.length) + "<span>";
            /*insert a input field that will hold the current array item's value:*/
            b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
            /*execute a function when someone clicks on the item value (DIV element):*/
            b.addEventListener("click", function(e) {
                /*insert the value for the autocomplete text field:*/
                inp.value = this.getElementsByTagName("input")[0].value;
                /*close the list of autocompleted values,
                (or any other open lists of autocompleted values:*/
                closeAllLists();
            });
            a.appendChild(b);
          }
        }
    });
    /*execute a function presses a key on the keyboard:*/
    inp.addEventListener("keydown", function(e) {
        var x = document.getElementById(this.id + "autocomplete-list");
        if (x) x = x.getElementsByTagName("div");
        if (e.keyCode == 40) {
          /*If the arrow DOWN key is pressed,
          increase the currentFocus variable:*/
          currentFocus++;
          /*and and make the current item more visible:*/
          addActive(x);
        } else if (e.keyCode == 38) { //up
          /*If the arrow UP key is pressed,
          decrease the currentFocus variable:*/
          currentFocus--;
          /*and and make the current item more visible:*/
          addActive(x);
        } else if (e.keyCode == 13) {
          /*If the ENTER key is pressed, prevent the form from being submitted,*/
          e.preventDefault();
          if (currentFocus > -1) {
            /*and simulate a click on the "active" item:*/
            if (x) x[currentFocus].click();
          }
        }
    });
    function addActive(x) {
      /*a function to classify an item as "active":*/
      if (!x) return false;
      /*start by removing the "active" class on all items:*/
      removeActive(x);
      if (currentFocus >= x.length) currentFocus = 0;
      if (currentFocus < 0) currentFocus = (x.length - 1);
      /*add class "autocomplete-active":*/
      x[currentFocus].classList.add("autocomplete-active");
    }
    function removeActive(x) {
      /*a function to remove the "active" class from all autocomplete items:*/
      for (var i = 0; i < x.length; i++) {
        x[i].classList.remove("autocomplete-active");
      }
    }
    function closeAllLists(elmnt) {
      /*close all autocomplete lists in the document,
      except the one passed as an argument:*/
      var x = document.getElementsByClassName("autocomplete-items");
      for (var i = 0; i < x.length; i++) {
        if (elmnt != x[i] && elmnt != inp) {
          x[i].parentNode.removeChild(x[i]);
        }
      }
    }
    /*execute a function when someone clicks in the document:*/
    document.addEventListener("click", function (e) {
        closeAllLists(e.target);
        console.log("ho premuto su " , e )
    });
  }

  //console.log("<%=listaRicette%>");
  /*initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:*/
  autocomplete(document.getElementById("searchBar") , "<%=listaRicette%>".split(','));
  </script>




</div>
